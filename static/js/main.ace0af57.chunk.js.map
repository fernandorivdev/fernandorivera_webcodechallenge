{"version":3,"sources":["components/top-bar/selectors.js","components/top-bar/components/searchInput.jsx","components/top-bar/actions.js","components/top-bar/constants.js","components/top-bar/top-bar.jsx","components/top-bar/reducer.js","components/top-bar/sagas.js","components/top-bar/index.js","components/post-action/selectors.js","components/post-action/constants.js","sharedComponents/profilePicture/profilePicture.jsx","sharedComponents/author/author.jsx","sharedComponents/up-votes/up-votes.jsx","sharedComponents/comments/comments.jsx","sharedComponents/title/title.jsx","components/post-action/components/post-description/post-description.jsx","components/post-action/components/action-card/actionCard.jsx","components/post-action/actions.js","components/post-action/components/dragLayer/drag-layer.jsx","components/post-action/post-action.jsx","components/post-action/reducer.js","components/post-action/sagas.js","components/post-action/index.js","reducers.js","sagas.js","api.js","components/post-list/components/down-votes/down-votes.jsx","components/post-list/components/post/post.jsx","components/post-list/components/loading/loading.jsx","components/post-list/post-list.jsx","App.js","serviceWorker.js","index.js"],"names":["selectTopBarState","state","selectSearchText","searchText","selectPosts","posts","selectIsSearching","searching","SearchInput","value","onChange","onEnterPressed","useState","focus","setFocus","className","classnames","type","e","target","onKeyUp","key","onFocus","onBlur","onLoadPosts","payload","onSearchCommand","text","connect","dispatch","onTextChange","initialState","error","searchPosts","onTextChanged","api","action","put","call","getPosts","postData","data","_","map","children","pick","delay","takeLatest","Component","selectPostActionsState","selectOpenPost","openPost","selectIsAnimatingPost","animatingPost","invalidPhotos","undefined","ProfilePicture","photoUrl","post","thumbnail","imageSrc","includes","alt","src","Author","author","UpVotes","showText","class","width","height","viewBox","fill","xmlns","fill-rule","d","clip-rule","ups","Comments","num_comments","Title","title","PostDescription","classNames","useDrag","item","collect","monitor","isDragging","drag","preview","useEffect","getEmptyImage","captureDraggingState","opacity","ref","style","ActionCard","applyAction","actionName","imgPath","actionText","useDrop","accept","hover","isOver","shallow","drop","PostsDragLayerComponent","animating","wasDragging","postAnimating","startTransitionTime","initialOffset","currentTransitionTime","transitionTime","transitionPhotos","lastOffset","x","y","currentOffset","this","r","setState","props","toggleAnimation","photoR","setTimeout","Date","now","transform","WebkitTransform","initialOffsetFromState","time","offset","getItemStyles","React","PostDragLayer","DragLayer","getItem","getInitialSourceClientOffset","getSourceClientOffset","on","postAnimatingToogle","isAnimatingPost","onClosePostActions","isOpen","portalClassName","ariaHideApp","onRequestClose","overlay","backgroundColor","link","permalink","window","open","location","href","takeEvery","topBarSaga","postActionsSagas","categoryName","axios","get","DownVotes","downs","Post","onOpenPostActions","openPostAction","mouseEntered","changeMouseEntered","onMouseEnter","onMouseLeave","onClick","Loading","color","isSearching","reducer","combineReducers","reducers","App","sagaMiddleware","createSagaMiddleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","services","sagas","forEach","saga","run","DndProvider","backend","HTML5Backend","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ace0af57.chunk.js","sourcesContent":["import { statePath } from \"./constants\";\r\n\r\nconst selectTopBarState = state => state[statePath];\r\n\r\nexport const selectSearchText = state => selectTopBarState(state).searchText;\r\n\r\nexport const selectPosts = state => selectTopBarState(state).posts;\r\n\r\nexport const selectIsSearching = state => selectTopBarState(state).searching;\r\n","import React, { useState } from 'react';\r\nimport './searchInput.scss';\r\nimport classnames from 'classnames';\r\n\r\nexport const SearchInput = ({ value, onChange, onEnterPressed })=> {\r\n  const [focus, setFocus] = useState(false);\r\n  const onInputChange = (e) => onChange(e.target.value);\r\n\r\n  const onKeyUp = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onEnterPressed(value);\r\n    }\r\n    \r\n  };\r\n  return <input\r\n    className={classnames('search-input', {'search-input-writing': focus})}\r\n    type='text'\r\n    onChange={onInputChange}\r\n    value={value}\r\n    onKeyUp={onKeyUp}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n};\r\n","import { LOAD_POSTS, SEARCH_TEXT_CHANGED, SEARCHING_POSTS_END, SEARCHING_POSTS_ERROR, SEARCHING_POSTS_START, SEARCH_COMMAND, } from \"./constants\";\r\n  \r\n  export const onTextChange = (text) => ({\r\n    type: SEARCH_TEXT_CHANGED,\r\n    payload: text\r\n  });\r\n  \r\n  export const onSearchStarted = () => ({\r\n    type: SEARCHING_POSTS_START\r\n  });\r\n  \r\n  export const onSearchEnd = () => ({\r\n    type: SEARCHING_POSTS_END\r\n  });\r\n   \r\n  export const onLoadPosts = (posts) => ({\r\n    type: LOAD_POSTS,\r\n    payload: posts,\r\n  });\r\n  \r\n  export const onSearchCommand = (text) => ({\r\n    type: SEARCH_COMMAND,\r\n    payload: text,\r\n  });\r\n  \r\n  export const onSearchError = (error) => ({\r\n    type: SEARCHING_POSTS_ERROR,\r\n    payload: error\r\n  });\r\n ","export const statePath = 'topBar';\r\n\r\nexport const SEARCH_TEXT_CHANGED = 'top-bar.search_text_changed';\r\n\r\nexport const SEARCHING_POSTS_START = 'top-bar.searching_posts_start';\r\n\r\nexport const SEARCHING_POSTS_END = 'top-bar.searching_posts_end';\r\n\r\nexport const LOAD_POSTS = 'top-bar.load_posts';\r\n\r\nexport const SEARCH_COMMAND = 'top-bar.search_command';\r\n\r\nexport const SEARCHING_POSTS_ERROR = 'top-bar.searching_posts_error';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSearchText } from \"./selectors\";\r\nimport { SearchInput } from './components/searchInput';\r\nimport { onTextChange, onSearchCommand } from './actions';\r\nimport './top-bar.scss';\r\n\r\nconst TopBar = ( { value, onTextChange, onSearchCommand }) => {\r\n  const onChange = text => onTextChange(text);\r\n\r\n  return <div className = \"container blue-background\">\r\n    <div className = \"content-container top-bar\">\r\n      <span className = \"top-bar-text\"> Reddit </span>\r\n      <SearchInput className=\"top-bar-search-input\" onChange={onChange} value={value} onEnterPressed={onSearchCommand}/>\r\n    </div>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: selectSearchText(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onTextChange: (value) => dispatch(onTextChange(value)),\r\n  onSearchCommand: (value) => dispatch(onSearchCommand(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar)\r\n","import { SEARCH_TEXT_CHANGED, SEARCHING_POSTS_START, SEARCHING_POSTS_END, LOAD_POSTS, SEARCHING_POSTS_ERROR } from \"./constants\";\r\n  \r\n  const initialState = {\r\n    searchText: 'funny',\r\n    posts: [],\r\n    searching: false,\r\n    error: null,\r\n  };\r\n  \r\n\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SEARCHING_POSTS_START:\r\n        return {\r\n          ...state,\r\n          searching: true,\r\n        };\r\n      case SEARCHING_POSTS_END:\r\n        return {\r\n          ...state,\r\n          searching: false,\r\n        };\r\n      case LOAD_POSTS:{\r\n        return {\r\n          ...state,\r\n          posts: action.payload,\r\n        }\r\n      }\r\n      case SEARCH_TEXT_CHANGED:\r\n        return {\r\n          ...state,\r\n          searchText: action.payload,\r\n        };\r\n      case SEARCHING_POSTS_ERROR:\r\n        return {\r\n          ...state,\r\n          searching: false,\r\n          error: action.payload,\r\n        } ;\r\n      \r\n        default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { SEARCH_TEXT_CHANGED, SEARCH_COMMAND } from \"./constants\";\r\nimport { takeLatest, call, delay, put } from 'redux-saga/effects';\r\nimport { onLoadPosts, onSearchEnd, onSearchError, onSearchStarted } from './actions';\r\n\r\nimport _ from 'lodash';\r\n\r\nfunction* searchPosts(api, action) {\r\n  const text = action.payload;\r\n  yield put(onSearchStarted());\r\n  \r\n  try {\r\n    const postData = yield call(api.getPosts, text);\r\n    yield put(onSearchEnd());\r\n\r\n    if (postData.data) {\r\n      const posts = _.map(postData.data.data.children, data => _.pick(data.data, ['title', 'author', 'num_comments', 'thumbnail', 'ups', 'downs', 'permalink']));\r\n      yield put(onLoadPosts(posts));\r\n    }\r\n  }\r\n  catch (e) {\r\n    yield put(onSearchError(e));\r\n  }\r\n}\r\n\r\nfunction* onTextChanged(api, action) {\r\n  yield delay(600);\r\n  yield searchPosts(api, action);\r\n}\r\n\r\nexport default function* ({ api }) {\r\n  yield takeLatest(SEARCH_TEXT_CHANGED, onTextChanged, api);\r\n  yield takeLatest(SEARCH_COMMAND, searchPosts, api);\r\n};\r\n\r\n","import Component from './top-bar';\r\nimport reducer from './reducer';\r\nimport sagas from './sagas';\r\nimport { statePath } from \"./constants\";\r\n\r\nexport default Component;\r\nexport { reducer, sagas, statePath };\r\n","import { statePath } from \"./constants\";\r\n\r\nconst selectPostActionsState = state => state[statePath];\r\n\r\nexport const selectOpenPost = (state) => selectPostActionsState(state).openPost;\r\n\r\nexport const selectIsAnimatingPost = (state) => selectPostActionsState(state).animatingPost;","export const statePath = 'post-action';\r\n\r\nexport const OPEN_POST_ACTIONS = 'post-action.open_post_actions';\r\n\r\nexport const POST_ANIMATION_TOGGLE = 'post-action.post_animation_start';\r\n\r\nexport const POST_ACTION = 'post-action.post_action';\r\n\r\nexport const CLOSE_POST_ACTIONS = 'post-action.close_post_actions';","import React from 'react';\r\nimport './profilePicture.scss';\r\n\r\nconst fallbackImage = '/warningSign.png';\r\nconst invalidPhotos = ['', 'default', 'self', null, undefined];\r\n\r\nexport const ProfilePicture = ({ post }) =>{\r\n  const photoUrl = post.thumbnail;\r\n  const imageSrc = invalidPhotos.includes(photoUrl) ? fallbackImage : photoUrl;\r\n  \r\n  return  (\r\n    <img alt=\"Profile\" src={imageSrc} className={'profile-picture'} />\r\n  )\r\n}","import React from 'react';\r\nimport './author.scss';\r\n\r\nexport const Author = ({ post }) => (<span className='author-name'>{post.author}</span>);","import React from 'react';\r\n\r\nexport const UpVotes = ({post, showText=true}) =>\r\n  (\r\n    <div className='icon-info'>\r\n      <svg class=\"bi bi-heart\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"#0fb1f8\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill-rule=\"evenodd\" d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 01.176-.17C12.72-3.042 23.333 4.867 8 15z\" clip-rule=\"evenodd\"/>\r\n    </svg>\r\n      <span>{post.ups} {showText && ' ups'}</span>\r\n    </div>\r\n  );","import React from 'react';\r\n\r\nexport const Comments = ({post, showText = true}) =>\r\n  (\r\n    <div className='icon-info'>\r\n      <svg class=\"bi bi-chat-square\"  width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"#0fb1f8\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fill-rule=\"evenodd\" d=\"M14 1H2a1 1 0 00-1 1v8a1 1 0 001 1h2.5a2 2 0 011.6.8L8 14.333 9.9 11.8a2 2 0 011.6-.8H14a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v8a2 2 0 002 2h2.5a1 1 0 01.8.4l1.9 2.533a1 1 0 001.6 0l1.9-2.533a1 1 0 01.8-.4H14a2 2 0 002-2V2a2 2 0 00-2-2H2z\" clip-rule=\"evenodd\"/>\r\n      </svg>\r\n       <span>{post.num_comments}{showText && ' Comments'}</span>\r\n    </div>\r\n  );","import React from 'react';\r\nimport './title.scss';\r\n\r\nexport const Title = ({post}) => (<span className='post-tittle'>{post.title}</span>);\r\n","import React, {useEffect} from 'react';\r\nimport { useDrag } from \"react-dnd\";\r\nimport classnames from \"classnames\";\r\nimport { getEmptyImage } from 'react-dnd-html5-backend'\r\nimport { ProfilePicture } from \"../../../../sharedComponents/profilePicture/profilePicture\";\r\nimport { Author } from \"../../../../sharedComponents/author/author\";\r\nimport { UpVotes } from \"../../../../sharedComponents/up-votes/up-votes\";\r\nimport { Comments } from \"../../../../sharedComponents/comments/comments\";\r\nimport { Title } from \"../../../../sharedComponents/title/title\";\r\nimport './post-description.scss'\r\n\r\nexport const PostDescription = ({ post, classNames }) => {\r\n  const [{isDragging}, drag, preview] = useDrag({\r\n    item: { type: 'post', post},\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    })\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true })\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  return <div ref={drag} className={classnames(\"post-card-container\", classNames)} style={{ opacity }}>\r\n      <ProfilePicture post = {post}/>\r\n      <div className=\"post-card-text-container\">\r\n        <Author post = {post}/>\r\n        <Title post = {post}/>\r\n      </div>\r\n      <div className='post-description-bottom-bar'>\r\n        <Comments post = {post} showText = {false}/>\r\n        <UpVotes post = {post} showText = {false}/>\r\n      </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport { useDrop } from \"react-dnd\";\r\nimport { connect } from 'react-redux';\r\nimport { postAction } from \"../../actions\";\r\nimport classnames from 'classnames';\r\nimport './actionCard.scss';\r\n\r\nconst ActionCardComponent = ({ imgPath, actionName, actionText, applyAction, post}) => {\r\n  const [{ hover }, drop] = useDrop({\r\n\r\n    accept: 'post',\r\n    collect: monitor => ({\r\n      hover: monitor.isOver({shallow: true}),\r\n    }),\r\n    \r\n    drop: item => {\r\n      applyAction(actionName, post)\r\n    }\r\n\r\n  });\r\n\r\n  return <div ref={drop} className={classnames(\"post-card-container\", actionName, \"action-card-container\", \r\n                        {'action-card-hover': hover})}>\r\n    <img alt='' src={imgPath} />\r\n    <span>{actionText}</span>\r\n\r\n  </div>\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch)=> ({\r\n  applyAction: (actionName, post) => dispatch(postAction({ actionName, post})),\r\n});\r\n\r\nexport const ActionCard = connect(null, mapDispatchToProps)(ActionCardComponent);\r\n ","import { OPEN_POST_ACTIONS, CLOSE_POST_ACTIONS, POST_ANIMATION_TOGGLE, POST_ACTION } from \"./constants\";\r\n\r\nexport const openPostAction = (post) => ({\r\n  type: OPEN_POST_ACTIONS,\r\n  payload: post,\r\n})\r\n\r\n;export const closePostAction = (post) => ({\r\n  type: CLOSE_POST_ACTIONS,\r\n  payload: post,\r\n});\r\n\r\nexport const postAnimatingToogle = (on) => ({\r\n  type: POST_ANIMATION_TOGGLE,\r\n  payload: on,\r\n});\r\n\r\nexport const postAction = ({ actionName, post}) => ({\r\n  type: POST_ACTION,\r\n  payload: { actionName, post },\r\n})\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { DragLayer } from \"react-dnd\";\r\nimport { PostDescription } from \"../post-description/post-description\";\r\nimport { postAnimatingToogle } from \"../../actions\";\r\nimport './drag-layer.scss';\r\n\r\nclass PostsDragLayerComponent extends React.Component {\r\n\r\n  state = {\r\n    animating: false,\r\n    wasDragging: false,\r\n    postAnimating: null,\r\n    startTransitionTime: null,\r\n    initialOffset: null,\r\n    currentTransitionTime: null,\r\n  };\r\n\r\n  transitionTime = 500;\r\n  transitionPhotos = 70;\r\n  lastOffset = { x: 0, y: 0};\r\n\r\n  getItemStyles (initialOffset, currentOffset) {\r\n    \r\n    const {\r\n      animating,\r\n      startTransitionTime,\r\n      currentTransitionTime,\r\n    } = this.state;\r\n    const { lastOffset, transitionPhotos, transitionTime } = this;\r\n\r\n    let { x, y } = initialOffset;\r\n    if ( currentOffset ) {\r\n      \r\n      x = currentOffset.x;\r\n      y = currentOffset.y;\r\n    }\r\n\r\n    if (animating) {\r\n      \r\n      const r = (currentTransitionTime -startTransitionTime)/ transitionTime;\r\n      if( r >= 1){\r\n        this.setState({ animating: false});\r\n        this.props.toggleAnimation(false);\r\n      }\r\n      \r\n      const photoR = transitionTime / transitionPhotos;\r\n      x = lastOffset.x - r * ( lastOffset.x - initialOffset.x);\r\n      y = lastOffset.y - r * ( lastOffset.y - initialOffset.y);\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          currentTransitionTime: Date.now(),\r\n        });\r\n      }, photoR)\r\n    }\r\n\r\n    const transform = `translate(${x}px, ${y}px)`;\r\n    return {\r\n      opacity: 0.5,\r\n      transform,\r\n      WebkitTransform: transform,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      item,\r\n      initialOffset,\r\n      currentOffset,\r\n      isDragging,\r\n      toggleAnimation,\r\n    } = this.props;\r\n\r\n    const {\r\n      wasDragging,\r\n      animating,\r\n      postAnimating,\r\n      initialOffset: initialOffsetFromState,\r\n    } = this.state;\r\n\r\n    if(isDragging && !wasDragging) {\r\n      this.setState({\r\n        wasDragging: true,\r\n        postAnimating: item.post,\r\n        initialOffset,\r\n      });\r\n    }\r\n\r\n    if(isDragging && currentOffset) {\r\n      this.lastOffset = currentOffset;\r\n    }\r\n\r\n    if(wasDragging && !isDragging){\r\n      const time = Date.now();\r\n      this.setState({\r\n        animating: true,\r\n        wasDragging: false,\r\n        startTransitionTime: time,\r\n        currentTransitionTime: Date.now(),\r\n      });\r\n      toggleAnimation(true);\r\n    }\r\n\r\n    if(!isDragging && !animating)\r\n      return null;\r\n    const post = item ? item.post : postAnimating;\r\n    const offset = initialOffset || initialOffsetFromState;\r\n    return (\r\n      <div  className='drag-layer' >\r\n        <div\r\n          style={this.getItemStyles(offset, currentOffset)}\r\n        >\r\n          <PostDescription post={post}/>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst collect = monitor => ({\r\n  item: monitor.getItem(),\r\n  initialOffset: monitor.getInitialSourceClientOffset(),\r\n  currentOffset: monitor.getSourceClientOffset(),\r\n  isDragging: monitor.isDragging(),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAnimation: (on) => dispatch(postAnimatingToogle(on)),\r\n});\r\n\r\nexport const PostDragLayer = DragLayer(collect)(connect(null,mapDispatchToProps)(PostsDragLayerComponent));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectOpenPost } from \"./selectors\";\r\nimport { PostDescription } from \"./components/post-description/post-description\";\r\nimport { ActionCard } from \"./components/action-card/actionCard\";\r\nimport { PostDragLayer } from \"./components/dragLayer/drag-layer\";\r\nimport { selectIsAnimatingPost } from \"./selectors\";\r\nimport { closePostAction } from \"./actions\";\r\nimport ReactModal from 'react-modal';\r\nimport './post-action.scss';\r\n\r\n\r\nconst PostAction = ({ openPost, isAnimatingPost, onClosePostActions }) => {\r\n  const closeModal= () => {\r\n    onClosePostActions()\r\n  };\r\n  \r\n  if(openPost === null)\r\n    return null;\r\n  return (\r\n    <ReactModal\r\n      isOpen={openPost !== null}\r\n      className=\"modal-blank\"\r\n      portalClassName='react-modal'\r\n      ariaHideApp={false}\r\n      onRequestClose={closeModal}\r\n      style={{\r\n        overlay: {\r\n          backgroundColor: 'rgba(100, 100, 100, 0.75)'\r\n        }\r\n      }}\r\n    >\r\n      <PostDragLayer/>\r\n      <div className='container post-action-container'>\r\n        <div className='container'>\r\n            <PostDescription post={openPost} classNames={isAnimatingPost && 'hide'}/>\r\n          <span className='post-action-instructions'> Drag the card on the left to the desired action. </span>\r\n        </div>\r\n        <div className='post-action-cards'>\r\n          <ActionCard actionName='link' actionText='Open on Reddit' imgPath='/reddit.png' post={openPost}/>\r\n          <ActionCard actionName='email' actionText='Email to a friend' imgPath='/envelope.png' post={openPost}/>\r\n        </div>\r\n      </div>\r\n    </ReactModal>);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClosePostActions: () => dispatch(closePostAction()),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  openPost: selectOpenPost(state),\r\n  isAnimatingPost: selectIsAnimatingPost(state),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostAction)","import { OPEN_POST_ACTIONS, CLOSE_POST_ACTIONS, POST_ANIMATION_TOGGLE } from './constants';\r\n\r\nconst initialState = {\r\n  openPost: null,\r\n  animatingPost: false,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case OPEN_POST_ACTIONS:\r\n      return {\r\n        ...state,\r\n        openPost: action.payload,\r\n      };\r\n\r\n    case CLOSE_POST_ACTIONS:\r\n      return {\r\n        ...state,\r\n        openPost: null,\r\n      };\r\n\r\n    case POST_ANIMATION_TOGGLE:\r\n      return {\r\n        ...state,\r\n        animatingPost: action.payload,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import { takeEvery, call } from 'redux-saga/effects';\r\nimport { POST_ACTION } from \"./constants\";\r\n\r\nfunction* applyAction(action) {\r\n  const { actionName, post } = action.payload;\r\n  const link = `http://www.reddit.com${post.permalink}`;\r\n  switch (actionName) {\r\n    case 'link':\r\n      yield call(window.open, link , '_blank');\r\n      break;\r\n    case 'email':\r\n      window.location.href = `mailto:fernandorivera@example.com?subject=Check out this Reddit post&body=<a href=\"${link}\"> ${link}</a>`;\r\n      break;\r\n    default :\r\n    \r\n  }\r\n}\r\n\r\nexport default function* ({ api }) {\r\n  yield takeEvery(POST_ACTION ,applyAction)\r\n};","import Component from './post-action';\r\nimport reducer from './reducer';\r\nimport sagas from './sagas';\r\nimport { statePath } from \"./constants\";\r\n\r\nexport default Component;\r\nexport { reducer, sagas, statePath };","import { reducer as topBarReducer, statePath as topBarStatePath } from './components/top-bar'\r\nimport { reducer as postActionReducer, statePath as postActionPath } from './components/post-action'\r\n\r\nexport default {\r\n  [topBarStatePath]: topBarReducer,\r\n  [postActionPath]: postActionReducer,\r\n}\r\n","import { sagas as topBarSaga } from './components/top-bar';\r\nimport { sagas as postActionsSagas } from './components/post-action';\r\n\r\nexport default [\r\n  topBarSaga,\r\n  postActionsSagas,\r\n]\r\n","import axios from 'axios';\r\n\r\nconst getPosts = (categoryName) => axios.get(`http://www.reddit.com/r/${categoryName}/.json`);\r\n\r\nexport default {\r\n    getPosts,\r\n}","import React from 'react';\r\n\r\nexport const DownVotes = ({post}) =>\r\n  (\r\n    <div className='icon-info'>\r\n      <svg class=\"bi bi-arrow-down\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"#0fb1f8\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill-rule=\"evenodd\" d=\"M4.646 9.646a.5.5 0 01.708 0L8 12.293l2.646-2.647a.5.5 0 01.708.708l-3 3a.5.5 0 01-.708 0l-3-3a.5.5 0 010-.708z\" clip-rule=\"evenodd\"/>\r\n        <path fill-rule=\"evenodd\" d=\"M8 2.5a.5.5 0 01.5.5v9a.5.5 0 01-1 0V3a.5.5 0 01.5-.5z\" clip-rule=\"evenodd\"/>\r\n      </svg>\r\n      <span>{post.downs} downs</span>\r\n    </div>\r\n  );\r\n","import React, {useState} from \"react\";\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { ProfilePicture } from \"../../../../sharedComponents/profilePicture/profilePicture\";\r\nimport { openPostAction } from \"../../../post-action/actions\";\r\nimport { Author } from \"../../../../sharedComponents/author/author\";\r\nimport { Title } from \"../../../../sharedComponents/title/title\";\r\nimport { Comments } from \"../../../../sharedComponents/comments/comments\";\r\nimport { UpVotes } from \"../../../../sharedComponents/up-votes/up-votes\";\r\nimport { DownVotes } from \"../down-votes/down-votes\";\r\nimport './post.scss'\r\n\r\n\r\nconst PostComponent = ({ post, onOpenPostActions }) => {\r\n  const [mouseEntered, changeMouseEntered] = useState(false);\r\n\r\n    return <div\r\n      className={classnames('post-container', { 'post-mouse-in': mouseEntered})}\r\n      onMouseEnter={() => changeMouseEntered(true)}\r\n      onMouseLeave={() => changeMouseEntered(false)}\r\n      onClick={() => onOpenPostActions(post)}\r\n    >\r\n      <ProfilePicture post={post}/>\r\n      <div className='post-text-container'>\r\n        <Author post={post}/>\r\n        <Title post={post}/>\r\n        <div className='post-bottom-bar'>\r\n          <Comments post={post}/>\r\n          <UpVotes post={post}/>\r\n          <DownVotes post={post}/>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch)=> ({\r\n  onOpenPostActions: (post) => dispatch(openPostAction(post)),\r\n});\r\n\r\nexport const Post= connect(null, mapDispatchToProps)(PostComponent);","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport './loading.scss';\r\n\r\nexport const Loading = () => (\r\n  <div className='loading-component'>\r\n    <ReactLoading type='spokes' color=\"#21AFEC\"/>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectPosts, selectIsSearching } from \"../top-bar/selectors\";\r\nimport { Post } from \"./components/post/post\";\r\nimport { Loading } from \"./components/loading/loading\";\r\nimport './post-list.scss';\r\n\r\nconst PostList = ({ posts, isSearching }) => {\r\n\r\n  return <div className=\"container\">\r\n    <div className=\"content-container\">\r\n      <div>\r\n        { !isSearching && posts && posts.map(post => (<Post post={post}/>))}\r\n        { isSearching && <Loading/>}\r\n      </div>\r\n    </div>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: selectPosts(state),\r\n  isSearching: selectIsSearching(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostList)\r\n","import React from 'react';\nimport './App.css';\n//import redux provider\nimport { Provider } from 'react-redux'\n//import custom reducers\nimport reducers from './reducers';\nimport {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\n//import sagas that is a library that aims to make application side effects\nimport sagas from './sagas';\nimport createSagaMiddleware from 'redux-saga';\n/*React DnD is a set of React utilities to help you build complex drag and drop \ninterfaces while keeping your components decoupled*/\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n//import my custom api\nimport api from './api';\n\n//import my components\nimport TopBar from './components/top-bar';\nimport PostList from \"./components/post-list/post-list\";\nimport PostActions from './components/post-action'\n//importr actions for Seach Command\nimport { onSearchCommand } from './components/top-bar/actions';\n\nconst reducer = combineReducers(reducers);\n\nfunction App() {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n  const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n  const store = createStore(reducer, enhancer);\n  const services = { api, };\n  sagas.forEach( saga => sagaMiddleware.run(saga, services));\n\n \n  store.dispatch(onSearchCommand('funny'));\n\n  return (\n    <Provider store={store}>\n      <DndProvider backend={HTML5Backend}>\n        <TopBar/>\n        <PostList/>\n        <PostActions/>\n      </DndProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}